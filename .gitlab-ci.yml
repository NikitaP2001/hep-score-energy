stages:
  - build-testing-image
  - unit-test
  - test

    
# Build the tox image (which is used to test the hep-score package)
# Use new CERN ci-tools (July 2019, BMK-113): see https://cern.service-now.com/service-portal/article.do?n=KB0005851
# Adapted from https://gitlab.cern.ch/gitlabci-examples/build_docker_image/blob/master/.gitlab-ci.yml
# Kaniko is the recommended method for running Docker-builds as of May 2019. 
# See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html for GitLab's documentation.
build_image_tox:
  stage: build-testing-image
  image: # NB enable shared runners and do not specify a CI tag
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder # CERN version of the Kaniko image
    entrypoint: [""]
  only:
    changes:
    - docker-images/tox/Dockerfile
    variables:
    - $CI_COMMIT_BRANCH =~ /^qa-.*$/
  script:
    # Prepare Kaniko configuration file
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # Build and push the image from the Dockerfile at the root of the project.
    # To push to a specific docker tag, amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
    - /kaniko/executor --context $CI_PROJECT_DIR/docker-images/tox --dockerfile $CI_PROJECT_DIR/docker-images/tox/Dockerfile --destination $CI_REGISTRY_IMAGE/tox:latest

pep8:
  stage: unit-test
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-score/tox
  dependencies: []
  except:
    - tags
  script:
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - tox -e pep8 | tee pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt > public/badges/$CI_JOB_NAME.score
    - tox -q -e pep8 -- -f pylint_gitlab.GitlabCodeClimateReporter > codeclimate.json
    - sed -i "/]/q" codeclimate.json 
  after_script:
    - tox -e badge -- $(cat public/badges/$CI_JOB_NAME.score)
    - |
      echo "Your score is $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always


python27:
  stage: unit-test
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-score/tox
  except:
    - tags
  script:
    # python2 
    - tox -e py27

python36:
  stage: unit-test
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-score/tox
  except:
    - tags
  script:
    - tox
  artifacts:
    reports:
      junit: report.xml
    expire_in: 1 week
    when: always

security:
  stage: unit-test
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-score/tox
  except:
    - tags
  script:
    - tox -e bandit    

test_python_support:
  # determine minimum supported python version
  stage: unit-test
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-score/tox
  script:
    - python3 -m pip install vermin
    - vermin -vv .
  only:
    changes:
      - "**/*.py"

kv_run_cc7:
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-benchmark-suite/hep-benchmark-suite-cc7:latest
  tags:
    -  hep-score-docker-runner 
  stage: test
  script: 
    - $CI_PROJECT_DIR/hepscore/tests/run_bat_tests.sh
  after_script:
    - tar -czf hep-score-test.tgz /tmp/HEPSCORE/$CI_JOB_ID	
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ /^qa-.*$/
  artifacts:
      paths:
        - hep-score-test.tgz
      expire_in: 1 week
      when: always

simpletrack_gpu:
  image: gitlab-registry.cern.ch/hep-benchmarks/hep-benchmark-suite/hep-benchmark-suite-cc7:latest
  tags:
    -  hep-workload-gpu-docker-builder
  stage: test
  script: 
    - pip install .
    - hep-score -v -V -d -f hepscore/etc/hepscore-gpu.yaml /tmp/HEPSCORE/$CI_JOB_ID
  after_script:
    - tar -czf hep-score-test.tgz /tmp/HEPSCORE/$CI_JOB_ID	
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ /^qa-.*$/
  artifacts:
      paths:
        - hep-score-test.tgz
      expire_in: 1 week
      when: always
